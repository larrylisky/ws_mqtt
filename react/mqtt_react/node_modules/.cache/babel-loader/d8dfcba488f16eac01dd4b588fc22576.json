{"ast":null,"code":"var _jsxFileName = \"/Users/larry/Software/react/mqtt_react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mqtt = require('mqtt');\n\nvar options = {\n  protocol: 'mqtts',\n  // clientId uniquely identifies client\n  // choose any string you wish\n  clientId: 'b0908853'\n};\nvar client = mqtt.connect('mqtt://test.mosquitto.org', options); // preciouschicken.com is the MQTT topic\n\nclient.subscribe('preciouschicken.com');\n\nfunction App() {\n  _s();\n\n  var note;\n  client.on('message', function (topic, message) {\n    note = message.toString(); // Updates React state with message \n\n    setMesg(note);\n    console.log(note);\n    client.end();\n  }); // Sets default React state \n\n  const [mesg, setMesg] = useState( /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"em\", {\n      children: \"nothing heard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 46\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 36\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"A taste of MQTT in React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The message is: \", mesg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.preciouschicken.com/blog/posts/a-taste-of-mqtt-in-react/\",\n          style: {\n            color: 'white'\n          },\n          children: \"preciouschicken.com/blog/posts/a-taste-of-mqtt-in-react/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5uuiihLpsMRs8/a/RiwJE3oFGfc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/larry/Software/react/mqtt_react/src/App.js"],"names":["React","useState","Fragment","mqtt","require","options","protocol","clientId","client","connect","subscribe","App","note","on","topic","message","toString","setMesg","console","log","end","mesg","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,WAAP;;;AAEA,IAAIC,IAAI,GAAMC,OAAO,CAAC,MAAD,CAArB;;AACA,IAAIC,OAAO,GAAG;AACbC,EAAAA,QAAQ,EAAE,OADG;AAEb;AACA;AACAC,EAAAA,QAAQ,EAAE;AAJG,CAAd;AAMA,IAAIC,MAAM,GAAIL,IAAI,CAACM,OAAL,CAAa,2BAAb,EAA0CJ,OAA1C,CAAd,C,CAEA;;AACAG,MAAM,CAACE,SAAP,CAAiB,qBAAjB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAIC,IAAJ;AACAJ,EAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAqB,UAAUC,KAAV,EAAiBC,OAAjB,EAA0B;AAC7CH,IAAAA,IAAI,GAAGG,OAAO,CAACC,QAAR,EAAP,CAD6C,CAE7C;;AACAC,IAAAA,OAAO,CAACL,IAAD,CAAP;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAJ,IAAAA,MAAM,CAACY,GAAP;AACC,GANH,EAFa,CAUb;;AACA,QAAM,CAACC,IAAD,EAAOJ,OAAP,IAAkBhB,QAAQ,eAAC,QAAC,QAAD;AAAA,2BAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAV;AAAA;AAAA;AAAA;AAAA,UAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACA;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,uCAAoBoB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGF;AAAA,+BACA;AAAG,UAAA,IAAI,EAAC,sEAAR;AACA,UAAA,KAAK,EAAE;AACNC,YAAAA,KAAK,EAAE;AADD,WADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAHE;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA3BQX,G;;KAAAA,G;AA6BT,eAAeA,GAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport './App.css';\n\nvar mqtt    = require('mqtt');\nvar options = {\n\tprotocol: 'mqtts',\n\t// clientId uniquely identifies client\n\t// choose any string you wish\n\tclientId: 'b0908853' \t\n};\nvar client  = mqtt.connect('mqtt://test.mosquitto.org', options);\n\n// preciouschicken.com is the MQTT topic\nclient.subscribe('preciouschicken.com');\n\nfunction App() {\n  var note;\n  client.on('message', function (topic, message) {\n    note = message.toString();\n    // Updates React state with message \n    setMesg(note);\n    console.log(note);\n    client.end();\n    });\n\n  // Sets default React state \n  const [mesg, setMesg] = useState(<Fragment><em>nothing heard</em></Fragment>);\n\n  return (\n    <div className=\"App\">\n    <header className=\"App-header\">\n    <h1>A taste of MQTT in React</h1>\n    <p>The message is: {mesg}</p>\n\t\t<p>\n\t\t<a href=\"https://www.preciouschicken.com/blog/posts/a-taste-of-mqtt-in-react/\"    \n\t\tstyle={{\n\t\t\tcolor: 'white'\n\t\t}}>preciouschicken.com/blog/posts/a-taste-of-mqtt-in-react/</a>\n\t\t</p>\n\t\t</header>\n\t\t</div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}